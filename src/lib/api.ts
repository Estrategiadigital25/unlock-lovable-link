// src/lib/api.ts
// Versi√≥n con OpenAI API integrada

export interface ChatMessage {
  role: string;
  content: string;
}

const OPENAI_API_KEY = import.meta.env.VITE_OPENAI_API_KEY || '';

export async function ping() {
  return { ok: true };
}

export async function chat(messages: { role: string; content: string }[]) {
  // Si no hay API key, usar modo demo
  if (!OPENAI_API_KEY || OPENAI_API_KEY.trim() === '') {
    console.log('OpenAI API key not found, using demo mode');
    await new Promise(resolve => setTimeout(resolve, 500));
    
    return {
      reply: "¬°Hola! Soy tu asistente de Ingtec Especialidades. " +
             "(Nota: Actualmente en modo demo. Configura VITE_OPENAI_API_KEY para usar GPT real)"
    };
  }

  // Llamada real a OpenAI
  try {
    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${OPENAI_API_KEY}`
      },
      body: JSON.stringify({
        model: 'gpt-3.5-turbo',
        messages: messages,
        temperature: 0.7,
        max_tokens: 1000
      })
    });

    if (!response.ok) {
      const errorData = await response.json().catch(() => ({}));
      throw new Error(errorData.error?.message || `HTTP ${response.status}`);
    }

    const data = await response.json();
    
    return {
      reply: data.choices[0].message.content
    };
  } catch (error) {
    console.error('Error calling OpenAI:', error);
    
    // Fallback a modo demo si hay error
    return {
      reply: "Lo siento, hay un problema con la conexi√≥n a OpenAI. " +
             "Por favor, verifica tu API key o contacta al administrador."
    };
  }
}

export async function askChat(messages: ChatMessage[], model?: string) {
  const response = await chat(messages);
  return response.reply || response;
}
```

### **6. Pega el c√≥digo:**
- Pega todo el c√≥digo que copiaste en el editor

### **7. Guarda los cambios:**
- Baja hasta abajo
- En "Commit message" escribe: `Integrate OpenAI API`
- Clic en el bot√≥n verde **"Commit changes"**

‚úÖ **Listo! C√≥digo actualizado en GitHub**

---

## üìù **PARTE C: AGREGAR LA LLAVE EN NETLIFY (5 min)**

### **1. Abre Netlify:**
```
https://app.netlify.com
```

### **2. Haz clic en tu sitio:**
- Busca "buscadoringtec"
- Haz clic en √©l

### **3. Ve a configuraci√≥n:**
- En el men√∫ de la izquierda, busca **"Site settings"**
- Haz clic

### **4. Busca Variables de Entorno:**
- En el men√∫ de la izquierda, busca **"Environment variables"**
- Haz clic

### **5. Agrega nueva variable:**
- Haz clic en **"Add a variable"**
- O **"Add variable"** o **"Add environment variable"**

### **6. Llena los campos:**

**En "Key" escribe EXACTAMENTE esto:**
```
VITE_OPENAI_API_KEY
```

**En "Value" pega tu llave de OpenAI:**
```
sk-proj-AbC123...XyZ789
(la que copiaste antes)
```

### **7. Guarda:**
- Clic en **"Save"** o **"Add variable"**

‚úÖ **Listo! Variable agregada**

---

## üìù **PARTE D: HACER QUE NETLIFY ACTUALICE LA APP (3 min)**

### **Opci√≥n 1: Esperar (m√°s f√°cil)**
- Netlify detecta autom√°ticamente los cambios en GitHub
- En 2-3 minutos empezar√° a reconstruir tu app
- **No hagas nada, solo espera**

### **Opci√≥n 2: Forzar actualizaci√≥n (m√°s r√°pido)**

**Si quieres que sea inmediato:**

1. En Netlify, busca arriba el tab **"Deploys"**
2. Haz clic en **"Trigger deploy"**
3. Selecciona **"Deploy site"**
4. Espera 2-3 minutos

---

## üìù **PARTE E: ¬°PROBAR QUE FUNCIONA! (2 min)**

### **1. Espera a que termine el deploy:**
- En Netlify ‚Üí Deploys
- Ver√°s un c√≠rculo amarillo girando
- Cuando se ponga **verde con ‚úì** = Listo

### **2. Abre tu app:**
```
https://buscadoringtec.netlify.app
```

### **3. Prueba el chat:**
- Abre o crea una conversaci√≥n
- Escribe: **"Expl√≠came qu√© es la ingenier√≠a especializada"**
- Presiona Enter

### **4. ¬°DEBER√çA RESPONDER CON IA REAL!**

**Si funciona ver√°s:**
- Una respuesta larga, coherente y contextual
- NO dir√° "modo demo"
- La respuesta ser√° diferente cada vez

**Si NO funciona:**
- Ver√°s el mensaje de "modo demo"
- Ve a la siguiente secci√≥n de troubleshooting

---

## üÜò **SI ALGO NO FUNCIONA:**

### **Problema 1: Sigue diciendo "modo demo"**

**Soluci√≥n:**
1. Ve a Netlify ‚Üí Site settings ‚Üí Environment variables
2. Verifica que la variable se llame **exactamente**: `VITE_OPENAI_API_KEY`
3. Verifica que el valor sea tu llave completa
4. Si est√° mal, ed√≠tala
5. Ve a Deploys ‚Üí Trigger deploy ‚Üí Deploy site
6. Espera 3 minutos
7. Prueba de nuevo

### **Problema 2: Error "Invalid API key"**

**Soluci√≥n:**
1. Verifica que copiaste la llave completa (empieza con `sk-proj-` o `sk-`)
2. Verifica que no tenga espacios al principio o al final
3. Si es necesario, genera una nueva llave en OpenAI
4. Actualiza la variable en Netlify
5. Redeploy

### **Problema 3: El deploy fall√≥**

**Soluci√≥n:**
1. Ve a Netlify ‚Üí Deploys
2. Haz clic en el deploy que fall√≥
3. Lee el error (toma screenshot si no entiendes)
4. Probablemente sea un error de sintaxis en el c√≥digo
5. Verifica que copiaste TODO el c√≥digo correctamente

---

## ‚úÖ **CHECKLIST - MARCA LO QUE YA HICISTE:**
```
‚ñ° Cre√© cuenta en OpenAI
‚ñ° Agregu√© m√©todo de pago
‚ñ° Cre√© API key
‚ñ° Copi√© la llave completa
‚ñ° Guard√© la llave en archivo de texto
‚ñ° Edit√© api.ts en GitHub
‚ñ° Borr√© todo el contenido viejo
‚ñ° Pegu√© el c√≥digo nuevo
‚ñ° Hice commit ("Integrate OpenAI API")
‚ñ° Abr√≠ Netlify
‚ñ° Fui a Site settings ‚Üí Environment variables
‚ñ° Agregu√© VITE_OPENAI_API_KEY
‚ñ° Pegu√© mi llave de OpenAI
‚ñ° Guard√© la variable
‚ñ° Esper√© el deploy (o lo forc√©)
‚ñ° Abr√≠ buscadoringtec.netlify.app
‚ñ° Prob√© el chat
‚ñ° ¬°FUNCIONA! üéâ
